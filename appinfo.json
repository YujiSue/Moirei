{
  "info": {
    "name": "Moirei",
    "type": "cui2",
    "author": [ "Yuji Suehiro" ],
    "copyright": "Yuji Suehiro",
    "version": "1.0.0",
    "develop": "2021/03/13",
    "license": "MIT License"
  },
  "command": {
    "ConvertGenome": {
      "require": [
        "input",
        "output"
      ],
      "option": [
        "source",
        "ver",
        "species",
        "rename",
        "attribute",
        "lg"
      ],
      "description": "Compress genome sequence (4 bases => 1 byte)."
    },
    "MakeAnnotDB": {
      "require": [
        "reference",
        "gff",
        "output",
        "plugin",
        "attribute"
      ],
      "option": [
        "source",
        "ver",
        "species"
      ],
      "description": "Construct local database for annotation."
    },
    "MakeOrthoDB": {
      "require": [
        "input",
        "output"
      ],
      "description": "Construct a local database of orthologue genes."
    },
    "MakeDiseaseDB": {
      "require": [
        "input",
        "output"
      ],
      "description": "Make a local database of human disease and related genes."
    },

    "RefInfo": {
      "require": [
        "reference",
        "annotdb"
      ],
      "option": [
        "output",
        "oformat"
      ],
      "description": "Display reference summary."
    },
    "GffSummary": {
      "require": [ "_args_" ],
      "description": "Summary of sources and attribute keys in a GFF file."
    },

    "GeneInfo": {
      "require": [
        "_args_",
        "annotdb"
      ],
      "option": [
        "output",
        "oformat",
        "search-description",
        "search-synonym",
        "search-xref",
        "transcript"
      ],
      "description": "Display gene information."
    },
    "OrthoGene": {
      "require": [
        "_args_",
        "db",
        "taxon"
      ],
      "option": [
        "output",
        "oformat"
      ],
      "description": "Display orthologue genes of the query."
    },
    "DiseaseRelated": {
      "require": [
        "_args_",
        "db",
        "taxon"
      ],
      "option": [
        "output",
        "oformat",
        "search-orthologue"
      ],
      "description": "Display genes related to the query disease."
    },
    "RelatedDisease": {
      "require": [
        "_args_",
        "db"
      ],
      "option": [
        "annotdb",
        "query-type",
        "output",
        "oformat",
        "search-orthologue"
      ],
      "description": "Display genes related to the query disease."
    },

    "PrimerInfo": {
      "require": [
        "_args_"
      ],
      "option": [
        "reference",
        "output",
        "oformat"
      ],
      "description": "Display primer property (i.e. GC%, melting temp., etc...)."
    },

    "GenomeSeq": {
      "require": [
        "_args_",
        "reference"
      ],
      "option": [
        "output",
        "oformat",
        "annotdb",
        "annotation",
        "limit-query-length"
      ],
      "description": "Extract genomic sequence."
    },
    "GeneSeq": {
      "require": [
        "_args_",
        "reference",
        "annotdb"
      ],
      "option": [
        "output",
        "outdir",
        "oformat"
      ],
      "description": "Extract gene sequence."
    },
    "TranscriptSeq": {
      "require": [
        "_args_",
        "reference",
        "annotdb"
      ],
      "option": [
        "output",
        "outdir",
        "oformat",
        "base-type",
        "query-type",
        "cds-only"
      ],
      "description": "Extract transcript sequence."
    },
    "GetComplement": {
      "require": [
        "_args_"
      ],
      "description": "Export complement sequence."
    },
    "GetTranslated": {
      "require": [
        "_args_"
      ],
      "option": [
        "codon"
      ],
      "description": "Export translated sequence."
    },

    "RefSearch": {
      "require": [ "reference" ],
      "select": [ "input", "_args_" ],
      "option": [
        "output",
        "seed-length",
        "min-match",
        "max-gap",
        "max-missmatch",
        "min-score",
        "threshold",
        "exact-match",
        "thread"
      ],
      "description": "Local search."
    },
    "VariantSearch": {
      "require": [
        "_args_",
        "reference"
      ],
      "option": [
        "outdir",
        "oformat",
        "annotdb",
        "recall",
        "alignment",
        "chromatogram",
        "hetero-detect"
      ],
      "description": "Search variants from Sangar sequence data"
    },
    "BioAnnotation": {
      "require": [
        "from",
        "to",
        "annotdb"
      ],
      "select": [
        "input",
        "_args_"
      ],
      "option": [
        "output",
        "feature-type"
      ],
      "description": "Annotation for specific sites."
    },

    "countGCRatio": {
      "require": [
        "reference",
        "bin"
      ],
      "option": [
        "output"
      ],
      "description": "Count GC of each bin."
    },

    "GeneMap": {
      "require": [
        "annotdb"
      ],
      "option": [
        "width",
        "display",
        "query-type",
        "mapping",
        "output"
      ],
      "description": "."
    },
    "MotifMap": {
      "require": [
        "annotdb"
      ],
      "option": [
        "width",
        "mapping",
        "motif-source",
        "output"
      ],
      "description": "."
    },




    "variantFilter": {
      "require": [
        "_args_",
        "reference",
        "param"
      ],
      "option": [
        "annotdb",
        "target",
        "output",
        "oformat",
        "plugin-filter",
        "plugin-io",
        "novel-only",
        "cds-only",
        "homo-only",
        "min-qual",
        "min-freq",
        "thread"
      ],
      "description": "Filter variants"
    }

  },
  "option": {
    "_args_": {
      "brief": "args...",
      "description": "Arguments for each command."
    },
    "workspace": {
      "brief": "path",
      "default": "~",
      "description": "Workspace directory. It requires more than 2-3 GB depending on the number of downloaded reference datasets."
    },
    "refname": {
      "brief": "name",
      "description": "Name for referecne data."
    },
    "reference": {
      "short": "r",
      "brief": "file",
      "description": "Path to compressed reference sequence file."
    },
    "annotation": {
      "brief": "type",
      "description": "Annotation data type. G: gene, T: transcript, V: variant(mutation), F: feature."
    },
    "annotdb": {
      "short": "a",
      "brief": "file(.db)",
      "description": "Path to local annotation database."
    },
    "db": {
      "short": "d",
      "brief": "file(.db)",
      "description": "Path to local database for inter-species dataset."
    },
    "param": {
      "short": "p",
      "brief": "file",
      "description": "Path to parameter file (.json)."
    },
    "target": {
      "short": "t",
      "brief": "file",
      "description": "Path to file describing target region (.bed)."
    },
    "input": {
      "short": "i",
      "brief": "input",
      "description": "Input file(s) or directory."
    },
    "output": {
      "short": "o",
      "brief": "output",
      "description": "Output file."
    },
    "outdir": {
      "short": "O",
      "brief": "dir",
      "description": "Output directory."
    },
    "file-name": {
      "brief": "name",
      "description": "file name to import / export"
    },
    "oformat": {
      "short": "f",
      "brief": "format",
      "default": "auto",
      "description": "Data format to export."
    },
    "url": {
      "short": "u",
      "brief": "URL",
      "description": "Address to download or call API"
    },
    "decompress": {
      "type": "bool",
      "default": false,
      "description": "Option to decompress file."
    },
    "ver": {
      "brief": "version",
      "description": "Version of bio-data (i.e. GRCh38)."
    },
    "dbver": {
      "brief": "version",
      "description": "Annotation dataset version (i.e. GRCh38.XXXX)."
    },
    "source": {
      "brief": "name",
      "description": "Name of data sorce."
    },
    "list": {
      "brief": "file",
      "description": "Dataset file."
    },
    "species": {
      "brief": "name",
      "description": "Species name."
    },
    "supplementary": {
      "brief": "additional",
      "description": "Additional information."
    },
    "rename": {
      "type": "bool",
      "default": false,
      "description": "Rename the sequences (i.e. RefSeq genome : accession numbers => common names such as 1,2,3...X,Y)."
    },
    "attribute": {
      "brief": "args",
      "description": "Attribute data or file."
    },
    "gff": {
      "brief": "file",
      "description": "GFF annotation file."
    },
    "gene-list": {
      "brief": "file",
      "description": "Gene list file."
    },
    "lg": {
      "brief": "str",
      "default": "ALL",
      "description": "Target linkage group(s). [CHR: CHRomosomes; M: Mitochondrial genome; PLT: Plastid; PLM: Plasmid; ALL: All seqences (default); IF need to combinate, join by '+(0x)' such as CHR+M meaning CHRomosome and Mitochondria ]"
    },
    "taxon": {
      "brief": "str",
      "description": "Name or NCBI ID of the target taxon."
    },
    "bin": {
      "brief": "size",
      "type": "int",
      "description": "Binning size"
    },
    "from": {
      "brief": "str",
      "description": "Name or symbol of the source for conversion."
    },
    "to": {
      "brief": "str",
      "description": "Name or symbol of the destination for conversion."
    },
    "base-type": {
      "brief": "type",
      "default": "auto",
      "description": "Base type."
    },
    "query": {
      "short": "q",
      "brief": "args",
      "description": "Query words or texts"
    },
    "query-type": {
      "brief": "type",
      "description": "Query type."
    },
    "plugin": {
      "brief": "name",
      "description": "Native plugin (dynamic library)."
    },
    "plugin-filter": {
      "brief": "plugin",
      "description": "Plugin for customized filter."
    },
    "plugin-io": {
      "brief": "plugin",
      "description": "Plugin for customized I/O."
    },
    "novel-only": {
      "type": "bool",
      "description": "Filter only novel variant."
    },
    "cds-only": {
      "type": "bool",
      "default": false,
      "description": "Target is limited in only CDS region."
    },
    "seed-length": {
      "brief": "value",
      "description": "Seed length to local search."
    },

    "min-score": {
      "brief": "value",
      "description": "Seed length to local search."
    },
    "homo-only": {
      "type": "bool",
      "default": false,
      "description": "Filter only homozygous variant."
    },
    "min-qual": {
      "brief": "value",
      "description": "Minimum quality value for filtering."
    },
    "limit-query-length": {
      "brief": "value",
      "description": "Limit of length/size to reduce resource usage."
    },
    "recall": {
      "type": "bool",
      "default": false,
      "description": "Reinterpret the BaseCall result in ABI's sequence file (.ab1). If the input file is not ABIF format, this option does not work."
    },
    "alignment": {
      "type": "bool",
      "default": false,
      "description": "Perform and/or export the alignment."
    },
    "chromatogram": {
      "type": "bool",
      "default": false,
      "description": "Export the raw data of chromatogram."
    },
    "codon": {
      "default": "general",
      "brief": "type",
      "description": "Set codon matrix. "
    },
    "feature-type": {
      "brief": "type",
      "description": "Set feature type to annotate. (ex. promotor, tf, telomere, etc...)"
    },
    "motif-source": {
      "brief": "sources",
      "description": "Comma separated "
    },
    "min-freq": {
      "brief": "value",
      "description": "Minimum frequency value for filtering."
    },
    "display": {
      "brief": "value",
      "default": "auto",
      "description": "."
    },
    "width": {
      "brief": "value",
      "default": "auto",
      "description": "."
    },
    "mapping": {
      "brief": "value",
      "description": "."
    }
  }
}